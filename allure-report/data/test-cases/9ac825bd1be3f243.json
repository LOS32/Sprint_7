{"uid":"9ac825bd1be3f243","name":"Попытка принять заказ без ID курьера","fullName":"tests.orders.test_accept_order_invalid_courier_id.TestAcceptOrderMissingCourierId#test_accept_order_missing_courier_id","historyId":"77919cc9bf094cdb33e85938b3935738","time":{"start":1734239868008,"stop":1734239873329,"duration":5321},"status":"failed","statusMessage":"AssertionError: Expected status 404 with 'Заказа с таким id не существует', but got 404 and {'code': 404, 'message': 'Курьера с таким id не существует'}\nassert (404 == 404 and 'Курьера с та...не существует' == 'Заказа с так...не существует'\n +  where 404 = <Response [404]>.status_code\n  \n  - Заказа с таким id не существует\n  ? ^ ----\n  + Курьера с таким id не существует\n  ? ^^^^^^)","statusTrace":"self = <tests.orders.test_accept_order_invalid_courier_id.TestAcceptOrderMissingCourierId object at 0x10bdef560>\n\n    @allure.title(\"Попытка принять заказ без ID курьера\")\n    def test_accept_order_missing_courier_id(self):\n        order_methods = OrderMethods()\n        courier_methods = CourierMethods()\n        courier_methods.create_courier(\n            COURIER_DATA[\"valid_courier\"][\"login\"],\n            COURIER_DATA[\"valid_courier\"][\"password\"],\n            COURIER_DATA[\"valid_courier\"][\"firstName\"]\n        )\n        courier_methods.login_courier(\n            COURIER_DATA[\"valid_courier\"][\"login\"],\n            COURIER_DATA[\"valid_courier\"][\"password\"],\n        )\n        invalid_courier_id = INVALID_COURIER_ID\n        order_data = ORDER_DATA[\"order_data_black\"]\n        create_order_response = order_methods.create_order(order_data)\n        track_number = create_order_response.json().get(\"track\")\n        get_order_response = order_methods.get_order_by_track(track_number)\n        order_id = get_order_response.json()[\"order\"].get(\"id\")\n        accept_order_response = order_methods.accept_order(order_id, invalid_courier_id)\n        response_json = accept_order_response.json()\n>       assert accept_order_response.status_code == 404 and response_json.get(\n            \"message\") == \"Заказа с таким id не существует\", (\n            f\"Expected status 404 with 'Заказа с таким id не существует', but got {accept_order_response.status_code} and {response_json}\"\n        )\nE       AssertionError: Expected status 404 with 'Заказа с таким id не существует', but got 404 and {'code': 404, 'message': 'Курьера с таким id не существует'}\nE       assert (404 == 404 and 'Курьера с та...не существует' == 'Заказа с так...не существует'\nE        +  where 404 = <Response [404]>.status_code\nE         \nE         - Заказа с таким id не существует\nE         ? ^ ----\nE         + Курьера с таким id не существует\nE         ? ^^^^^^)\n\ntests/orders/test_accept_order_invalid_courier_id.py:29: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"Принятие заказа"},{"name":"parentSuite","value":"tests.orders"},{"name":"suite","value":"test_accept_order_invalid_courier_id"},{"name":"subSuite","value":"TestAcceptOrderMissingCourierId"},{"name":"host","value":"MBP-Dmitrij.lan"},{"name":"thread","value":"2399-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.orders.test_accept_order_invalid_courier_id"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"684381ce2e600737","status":"failed","statusDetails":"AssertionError: Expected status 404 with 'Заказа с таким id не существует', but got 404 and {'code': 404, 'message': 'Курьера с таким id не существует'}\nassert (404 == 404 and 'Курьера с та...не существует' == 'Заказа с так...не существует'\n +  where 404 = <Response [404]>.status_code\n  \n  - Заказа с таким id не существует\n  ? ^ ----\n  + Курьера с таким id не существует\n  ? ^^^^^^)","time":{"start":1734236231164,"stop":1734236240893,"duration":9729}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"9ac825bd1be3f243.json","parameterValues":[]}